Функция ЗапуститьВыполнениеВФоне(АдресВоВременномХранилище) Экспорт
	
	МассивПараметров = Новый Массив;
	МассивПараметров.Добавить(АдресВоВременномХранилище);

	ФоновоеЗадание = ФоновыеЗадания.Выполнить("ВыполнениеВФоне.ЗаполнитьТаблицуВФоне", МассивПараметров);
	Возврат ФоновоеЗадание.УникальныйИдентификатор;
	
КонецФункции

Процедура ЗаполнитьТаблицуВФоне(АдресВоВременномХранилище) Экспорт

	Сообщение = Новый СообщениеПользователю;
	Сообщение.Текст = "Я живой!";
	Сообщение.Сообщить();
	
	ТабЗнач = ЗаполнитьТаблицуВФонеФрагмент();

	ПоместитьВоВременноеХранилище(ТабЗнач, АдресВоВременномХранилище);
	
	
КонецПроцедуры

Функция ЗаполнитьТаблицуВФонеФрагмент()
	
	Перем ОписаниеТипаКоличество, ТабЗнач;
	
	ТабЗнач = новый ТаблицаЗначений;
	ТабЗнач.Колонки.Добавить("Продукт", Новый ОписаниеТипов("СправочникСсылка.Продукты"));
	
	ОписаниеТипаКоличество = Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15,3));
	
	ТабЗнач.Колонки.Добавить("КоличествоОстаток", ОписаниеТипаКоличество);
	ТабЗнач.Колонки.Добавить("МинимальноеКоличество", ОписаниеТипаКоличество);
	ТабЗнач.Колонки.Добавить("Заказано", ОписаниеТипаКоличество);
	ТабЗнач.Колонки.Добавить("ЕдиницаИзмерения", Новый ОписаниеТипов("СправочникСсылка.ЕдиницаИзмерения"));
	
	МинимальныйОстаток.ЗаполнитьТаблицуМинимальногоОстатка(ТабЗнач);
	Возврат ТабЗнач;

КонецФункции

Процедура Пауза(ВремяПаузы)

	КогдаПрекратить = ТекущаяДата()	+ ВремяПаузы;
	Пока КогдаПрекратить > ТекущаяДата() Цикл
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ФормированиеЗакупки() Экспорт
	

	Если Константы.Поставщик.Получить() = Справочники.Контрагенты.ПустаяСсылка()
		ИЛИ Константы.Договор.Получить() = Справочники.Договора.ПустаяСсылка()
		ИЛИ Константы.Менеджер.Получить() = Справочники.Сотрудники.ПустаяСсылка() Тогда
		Возврат;
	КонецЕсли;
	
	
	ТабЗнач = ЗаполнитьТаблицуВФонеФрагмент();
	
	Если ТабЗнач.Количество() <> 0 Тогда
		Сообщить(ТабЗнач.Количество());
	
	    Заказ = Документы.ЗаказПоставщику.СоздатьДокумент();
		Заказ.Дата = ТекущаяДата();
		  
		
		Заказ.Поставщик = Константы.Поставщик.Получить();
		Заказ.Договор = Константы.Договор.Получить();
		Заказ.Менеджер = Константы.Менеджер.Получить();
		  
		Для Каждого ЭлементКоллекции из ТабЗнач Цикл
			  
			СтрокаПродуктов = Заказ.Продукты.Добавить();
			СтрокаПродуктов.Продукт = ЭлементКоллекции.Продукт;
			СтрокаПродуктов.ЕдиницаИзмерения = ЭлементКоллекции.ЕдиницаИзмерения;
			СтрокаПродуктов.Количество = 2 * ЭлементКоллекции.МинимальноеКоличество - ЭлементКоллекции.КоличествоОстаток - ЭлементКоллекции.Заказано;
			СтрокаПродуктов.Цена = 0;
			СтрокаПродуктов.Сумма = 0;
			  
		КонецЦикла;
		  
		Заказ.Записать(РежимЗаписиДокумента.Проведение); 
		
	КонецЕсли;
	

КонецПроцедуры


