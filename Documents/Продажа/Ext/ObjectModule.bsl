
Процедура ОбработкаПроведения(Отказ, Режим)
	
	Движения.ИнгредиентыВНаличии.Записывать = Истина;
    Движения.ПродажиБлюд.Записывать = Истина;
    Движения.Записать();
    
    Движения.ИнгредиентыВНаличии.Записывать = Истина;
    Движения.ПродажиБлюд.Записывать = Истина;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РасходнаяНакладнаяСписокНоменклатуры.Номенклатура КАК Номенклатура,
		|	СУММА(РасходнаяНакладнаяСписокНоменклатуры.Количество) КАК Количество,
		|	СУММА(РасходнаяНакладнаяСписокНоменклатуры.Сумма) КАК Сумма
		|ПОМЕСТИТЬ ВТ
		|ИЗ
		|	Документ.Продажа.Товары КАК РасходнаяНакладнаяСписокНоменклатуры
		|ГДЕ
		|	РасходнаяНакладнаяСписокНоменклатуры.Ссылка = &Ссылка
		|	И РасходнаяНакладнаяСписокНоменклатуры.Номенклатура ССЫЛКА Справочник.Блюда
		|
		|СГРУППИРОВАТЬ ПО
		|	РасходнаяНакладнаяСписокНоменклатуры.Номенклатура
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ.Номенклатура КАК Номенклатура
		|ИЗ
		|	ВТ КАК ВТ";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ТаблицаТолькоБлюда = РезультатЗапроса.Выгрузить();
	
	
	Блокировка = Новый БлокировкаДанных;
	
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ИнгредиентыВНаличии");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = ТаблицаТолькоБлюда;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура"); 
	
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ПродажиБлюд");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = ТаблицаТолькоБлюда;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура");

	Блокировка.Заблокировать(); 
	
	
	ИнгредиентыДанные = Новый Соответствие;
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РезультатЗапроса.РодительНоменклатуры КАК РодительНоменклатуры,
		|	РезультатЗапроса.Номенклатура КАК Номенклатура,
		|	РезультатЗапроса.КоличествоВДокументе КАК КоличествоВДокументе,
		|	РезультатЗапроса.СуммаВДокументе КАК СуммаВДокументе,
		|	РезультатЗапроса.Партия КАК Партия,
		|	ЕСТЬNULL(РезультатЗапроса.КоличествоОстаток, 0) КАК КоличествоОстаток,
		|	ЕСТЬNULL(РезультатЗапроса.СуммаОстаток, 0) КАК СуммаОстаток
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВТ.Номенклатура КАК РодительНоменклатуры,
		|		ВТ.Номенклатура КАК Номенклатура,
		|		ВТ.Количество КАК КоличествоВДокументе,
		|		ВТ.Сумма КАК СуммаВДокументе,
		|		Остатки.Партия КАК Партия,
		|		ВЫБОР
		|			КОГДА СУММА(Остатки.КоличествоОстаток) ЕСТЬ NULL
		|				ТОГДА 0
		|			ИНАЧЕ СУММА(Остатки.КоличествоОстаток)
		|		КОНЕЦ КАК КоличествоОстаток,
		|		ВЫБОР
		|			КОГДА СУММА(Остатки.СуммаОстаток) ЕСТЬ NULL
		|				ТОГДА 0
		|			ИНАЧЕ СУММА(Остатки.СуммаОстаток)
		|		КОНЕЦ КАК СуммаОстаток
		|	ИЗ
		|		ВТ КАК ВТ
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ИнгредиентыВНаличии.Остатки(
		|					&МоментВремени,
		|					Номенклатура В
		|						(ВЫБРАТЬ
		|							ВТ.Номенклатура
		|						ИЗ
		|							ВТ)) КАК Остатки
		|			ПО ВТ.Номенклатура = Остатки.Номенклатура
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ВТ.Номенклатура,
		|		ВТ.Количество,
		|		ВТ.Сумма,
		|		Остатки.Партия,
		|		ВТ.Номенклатура
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТ.Номенклатура,
		|		Состав.Продукт,
		|		Состав.Количество,
		|		0,
		|		ОстаткиИнг.Партия,
		|		ВЫБОР
		|			КОГДА СУММА(ОстаткиИнг.КоличествоОстаток) ЕСТЬ NULL
		|				ТОГДА 0
		|			ИНАЧЕ СУММА(ОстаткиИнг.КоличествоОстаток)
		|		КОНЕЦ,
		|		ВЫБОР
		|			КОГДА СУММА(ОстаткиИнг.СуммаОстаток) ЕСТЬ NULL
		|				ТОГДА 0
		|			ИНАЧЕ СУММА(ОстаткиИнг.СуммаОстаток)
		|		КОНЕЦ
		|	ИЗ
		|		ВТ КАК ВТ
		|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Блюда.Состав КАК Состав
		|			ПО ВТ.Номенклатура = Состав.Ссылка
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ИнгредиентыВНаличии.Остатки(
		|					&МоментВремени,
		|					Номенклатура В
		|						(ВЫБРАТЬ
		|							Справочник.Блюда.Состав.Продукт
		|						ИЗ
		|							Справочник.Блюда.Состав)) КАК ОстаткиИнг
		|			ПО (Состав.Продукт = ОстаткиИнг.Номенклатура)
		|				И (ОстаткиИнг.Заведение = &Заведение)
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ВТ.Номенклатура,
		|		Состав.Продукт,
		|		ВТ.Количество,
		|		Состав.Количество,
		|		ОстаткиИнг.Партия) КАК РезультатЗапроса
		|ИТОГИ
		|	МАКСИМУМ(СуммаВДокументе),
		|	МАКСИМУМ(КоличествоВДокументе),
		|	СУММА(КоличествоОстаток)
		|ПО
		|	РодительНоменклатуры,
		|	Номенклатура";
	
	Запрос.УстановитьПараметр("Заведение", Заведение);
	ПериодПродажи = ?(Режим = РежимПроведенияДокумента.Оперативный, 
														Неопределено, 
														МоментВремени());
	Запрос.УстановитьПараметр("МоментВремени", ПериодПродажи);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаРодительНоменклатуры = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаРодительНоменклатуры.Следующий() Цикл
		Если Отказ Тогда
			Возврат;	
		КонецЕсли;
	
		ВыборкаНоменклатура = ВыборкаРодительНоменклатуры.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	    Первый = Истина;
		Нехватка = 0;
		Себестоимость = 0;
		Стоимость = 0;
		
		Пока ВыборкаНоменклатура.Следующий() Цикл
			Если Отказ Тогда
				Возврат;	
			КонецЕсли;
			
			ОсталосьСписать = 0;
			
			//Списываем готовые блюда
			Если Первый Тогда
				
				Нехватка = ВыборкаНоменклатура.КоличествоВДокументе - ВыборкаНоменклатура.КоличествоОстаток;
				Стоимость = ВыборкаНоменклатура.СуммаВДокументе / ВыборкаНоменклатура.КоличествоВДокументе * Нехватка;
				
				Если ВыборкаНоменклатура.КоличествоОстаток > 0 Тогда
					
					Блюда = ВыборкаНоменклатура.Выбрать();
					ОсталосьСписать = ВыборкаНоменклатура.КоличествоВДокументе;
					
					Пока Блюда.Следующий() И ОсталосьСписать <> 0 Цикл
						
						КСписанию = Мин(ОсталосьСписать, Блюда.КоличествоОстаток);
						
						СуммаСписания = ?(Блюда.КоличествоОстаток = КСписанию,
						Блюда.СуммаОстаток,
						Блюда.СуммаОстаток/Блюда.КоличествоОстаток * КСписанию);
						
						Сумма = ?(Блюда.КоличествоОстаток = КСписанию,
						Блюда.СуммаВДокументе,
						Блюда.СуммаВДокументе/Блюда.КоличествоОстаток * КСписанию);
						
						НовоеДвижение = Движения.ИнгредиентыВНаличии.ДобавитьРасход();
						НовоеДвижение.Период = Дата;
						НовоеДвижение.Регистратор = Ссылка;
						НовоеДвижение.Количество = КСписанию;
						НовоеДвижение.Номенклатура = Блюда.Номенклатура;
						НовоеДвижение.Партия = Блюда.Партия;
						НовоеДвижение.Сумма = СуммаСписания;
						НовоеДвижение.Заведение = Заведение;
						
						
						НовоеДвижение = Движения.ПродажиБлюд.Добавить();
						НовоеДвижение.Активность = Истина;
						НовоеДвижение.Период = Дата;
						НовоеДвижение.Регистратор = Ссылка;
						НовоеДвижение.Номенклатура = Блюда.Номенклатура;
						НовоеДвижение.Менеджер = Менеджер;
						НовоеДвижение.Количество = КСписанию;
						НовоеДвижение.Сумма = Сумма;
						НовоеДвижение.Себестоимость = СуммаСписания;
						
						ОсталосьСписать = ОсталосьСписать - КСписанию;
						
					КонецЦикла;
					
				КонецЕсли;
				
				Если Нехватка <= 0 Тогда
					Прервать;
				КонецЕсли;
				
				Первый = Ложь;
				Продолжить;
				
			КонецЕсли;
			
			ОсталосьСписать = ВыборкаНоменклатура.КоличествоВДокументе * Нехватка;
			
			Если ОсталосьСписать > ВыборкаНоменклатура.КоличествоОстаток Тогда
				
				Отказ = Истина;
				Возврат;
				
			КонецЕсли;
			
			//Собираем блюдо из ингредиентов
			
			Если ИнгредиентыДанные.Получить(ВыборкаНоменклатура.Номенклатура) <> Неопределено Тогда
				
				МассивПартий = ИнгредиентыДанные.Получить(ВыборкаНоменклатура.Номенклатура);
				Для Каждого Партия из МассивПартий Цикл
					
					Если ОсталосьСписать = 0 Тогда
						Прервать;
					КонецЕсли;
					
					КСписанию = Мин(ОсталосьСписать, Партия[1]);
					
					СуммаСписания = ?(Партия[1] = КСписанию,
					Партия[2],
					Партия[2] / Партия[1] * КСписанию);
					
					НовоеДвижение = Движения.ИнгредиентыВНаличии.ДобавитьРасход();
					НовоеДвижение.Период = Дата;
					НовоеДвижение.Регистратор = Ссылка;
					НовоеДвижение.Количество = КСписанию;
					НовоеДвижение.Номенклатура = ВыборкаНоменклатура.Номенклатура;
					НовоеДвижение.Партия = Партия[0];
					НовоеДвижение.Сумма = СуммаСписания;
					НовоеДвижение.Заведение = Заведение;
					
					ОсталосьСписать = ОсталосьСписать - КСписанию;
					
					Партия[1] = Партия[1] - КСписанию;
					Партия[2] = Партия[2] - СуммаСписания;
					
					Себестоимость = Себестоимость + СуммаСписания;
					
				КонецЦикла;
				
				Если ОсталосьСписать > 0 Тогда
					Отказ = Истина;
					Возврат;
				КонецЕсли;
	
					
			Иначе
					
				Ингредиенты = ВыборкаНоменклатура.Выбрать();
				
				МассивПартий = Новый Массив;
		
				Пока Ингредиенты.Следующий() И ОсталосьСписать <> 0 Цикл
					
					КСписанию = Мин(ОсталосьСписать, Ингредиенты.КоличествоОстаток);
						
					СуммаСписания = ?(Ингредиенты.КоличествоОстаток = КСписанию,
					Ингредиенты.СуммаОстаток,
					Ингредиенты.СуммаОстаток / Ингредиенты.КоличествоОстаток * КСписанию);
					
					НовоеДвижение = Движения.ИнгредиентыВНаличии.ДобавитьРасход();
					НовоеДвижение.Период = Дата;
					НовоеДвижение.Регистратор = Ссылка;
					НовоеДвижение.Количество = КСписанию;
					НовоеДвижение.Номенклатура = Ингредиенты.Номенклатура;
					НовоеДвижение.Партия = Ингредиенты.Партия;
					НовоеДвижение.Сумма = СуммаСписания;
					НовоеДвижение.Заведение = Заведение;
					
					ОсталосьСписать = ОсталосьСписать - КСписанию;
					
					Массив = Новый Массив;
					Массив.Добавить(Ингредиенты.Партия);
					Массив.Добавить(Ингредиенты.КоличествоОстаток - КСписанию);
					Массив.Добавить(Ингредиенты.СуммаОстаток - СуммаСписания);	
					МассивПартий.Добавить(Массив); 
					
					Себестоимость = Себестоимость + СуммаСписания;
					
				КонецЦикла;
				
				ИнгредиентыДанные.Вставить(ВыборкаНоменклатура.Номенклатура, МассивПартий);
					
			КонецЕсли;
			
		КонецЦикла; 
		Если НЕ Первый Тогда
			НовоеДвижение = Движения.ПродажиБлюд.Добавить();
			НовоеДвижение.Активность = Истина;
			НовоеДвижение.Период = Дата;
			НовоеДвижение.Регистратор = Ссылка;
			НовоеДвижение.Номенклатура = ВыборкаРодительНоменклатуры.РодительНоменклатуры;
			НовоеДвижение.Менеджер = Менеджер;
			НовоеДвижение.Количество = Нехватка;
			НовоеДвижение.Сумма = Стоимость;
			НовоеДвижение.Себестоимость = Себестоимость; 
		КонецЕсли;
		
	КонецЦикла;	
		
КонецПроцедуры

