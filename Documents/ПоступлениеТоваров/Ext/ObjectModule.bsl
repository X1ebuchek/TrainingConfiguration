
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	//{{__КОНСТРУКТОР_ВВОД_НА_ОСНОВАНИИ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
		// Заполнение шапки
		Договор = ДанныеЗаполнения.Договор;
		Менеджер = ДанныеЗаполнения.Менеджер;
		Поставщик = ДанныеЗаполнения.Поставщик;
		СуммаДоСкидки = ДанныеЗаполнения.СуммаДокумента;
		СуммаДокумента = 0;
		
		МассивПродуктов = Новый Массив; 
		Для Каждого ТекСтрокаПродукты Из ДанныеЗаполнения.Продукты Цикл
			Если ТекСтрокаПродукты.Продукт <> Неопределено Тогда
        		МассивПродуктов.Добавить(ТекСтрокаПродукты.Продукт);
        		Сообщить("Добавлен продукт: " + ТекСтрокаПродукты.Продукт);
    		Иначе
        		Сообщить("Ошибка: найден продукт = Неопределено!");
    		КонецЕсли;
		КонецЦикла;
		
		СкидкиНаПродукты = ПерерасчетСуммСервер.ПолучитьСкидкиНаПродуктыНаСервере(МассивПродуктов, ТекущаяДата());
		СкидкаДоговора = ПерерасчетСуммСервер.ПолучитьСкидкуИзДоговораНаСервере(ДанныеЗаполнения.Договор, ТекущаяДата());
		Если СкидкаДоговора = Неопределено Тогда
			ВариантСкидки = ПерерасчетСуммСервер.ПолучитьСкидкуНаСервере(ДанныеЗаполнения.Договор);
			СкидкаДоговора = ПосчитатьСкидку(ВариантСкидки);
		КонецЕсли; 
		
		Для Каждого ТекСтрокаПродукты Из ДанныеЗаполнения.Продукты Цикл
			НоваяСтрока = Товары.Добавить();
			НоваяСтрока.ЕдиницаИзмерения = ТекСтрокаПродукты.ЕдиницаИзмерения;
			НоваяСтрока.Количество = ТекСтрокаПродукты.Количество;
			НоваяСтрока.Номенклатура = ТекСтрокаПродукты.Продукт;
			НоваяСтрока.Сумма = ТекСтрокаПродукты.Сумма;
			НоваяСтрока.Цена = ТекСтрокаПродукты.Цена;
			Если СкидкиНаПродукты.Получить(НоваяСтрока.Номенклатура) <> Неопределено Тогда
				НоваяСтрока.Скидка = "" + СкидкиНаПродукты.Получить(НоваяСтрока.Номенклатура) + "%";
				НоваяСтрока.ИтоговаяСумма = ТекСтрокаПродукты.Сумма * (1 - СкидкиНаПродукты.Получить(НоваяСтрока.Номенклатура) / 100);
			Иначе
				НоваяСтрока.Скидка = "" + СкидкаДоговора + "%";
				НоваяСтрока.ИтоговаяСумма = ТекСтрокаПродукты.Сумма * (1 - СкидкаДоговора / 100);  
			КонецЕсли;
			СуммаДокумента = СуммаДокумента + НоваяСтрока.ИтоговаяСумма;
			
		КонецЦикла;
		
		
	КонецЕсли;
	//}}__КОНСТРУКТОР_ВВОД_НА_ОСНОВАНИИ
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	// регистр Взаиморасчёты Расход
	Движения.Взаиморасчёты.Записывать = Истина;
	Движение = Движения.Взаиморасчёты.Добавить();
	Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
	Движение.Период = Дата;
	Движение.Поставщик = Поставщик;
	Движение.Договор = Договор;
	Движение.Сумма = СуммаДокумента;

	// регистр ИнгредиентыВНаличии Приход
	Движения.ИнгредиентыВНаличии.Записывать = Истина;
	Для Каждого ТекСтрокаТовары Из Товары Цикл
		Движение = Движения.ИнгредиентыВНаличии.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
		Движение.Заведение = Склад;
		Движение.Партия = Ссылка;
		Движение.Количество = ТекСтрокаТовары.Количество;
		Движение.Сумма = ТекСтрокаТовары.ИтоговаяСумма;
	КонецЦикла;

	// регистр ЗаказыПродуктов Расход
	Движения.ЗаказыПродуктов.Записывать = Истина;
	Для Каждого ТекСтрокаТовары Из Товары Цикл
		Движение = Движения.ЗаказыПродуктов.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Продукт = ТекСтрокаТовары.Номенклатура;
		Движение.Количество = ТекСтрокаТовары.Количество;
	КонецЦикла;

	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	СуммаДоСкидки = Товары.Итог("Сумма"); 
	//ВариантСкидки = ПерерасчетСуммСервер.ПолучитьСкидкуНаСервере(Договор);
	//СуммаДокумента = ПосчитатьСкидку(ВариантСкидки, СуммаДоСкидки);
	
КонецПроцедуры


