
Процедура ОбработкаПроведения(Отказ, Режим)
	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	// регистр Взаиморасчёты Приход
	Движения.Взаиморасчёты.Записывать = Истина;
	Движение = Движения.Взаиморасчёты.Добавить();
	Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
	Движение.Период = Дата;
	Движение.Поставщик = Поставщик;
	Движение.Договор = Договор;
	Движение.Сумма = СуммаОплаты;

	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
		
	//ВариантСкидки = ПерерасчетСуммСервер.ПолучитьСкидкуНаСервере(Договор);
	//Сумма = ПосчитатьСкидку(ВариантСкидки, СуммаДоСкидки);
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	//{{__КОНСТРУКТОР_ВВОД_НА_ОСНОВАНИИ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПоступлениеТоваров") Тогда
		// Заполнение шапки
		Договор = ДанныеЗаполнения.Договор;
		Поставщик = ДанныеЗаполнения.Поставщик;
		
		Запрос = Новый Запрос;
	
		Запрос.Текст = "
		|ВЫБРАТЬ
		|	ВзаиморасчётыОстатки.СуммаОстаток КАК СуммаОстаток
		|ИЗ
		|	РегистрНакопления.Взаиморасчёты.Остатки КАК ВзаиморасчётыОстатки
		|ГДЕ
		|	ВзаиморасчётыОстатки.Договор = &Договор";
		
		Запрос.УстановитьПараметр("Договор", Договор);
		Выборка = Запрос.Выполнить().Выбрать();
	 	Выборка.Следующий();
		
		Если Выборка.СуммаОстаток <> Неопределено Тогда
			СуммаЗадолженности = -Выборка.СуммаОстаток;
		Иначе
			СуммаЗадолженности = 0;
		КонецЕсли;
	КонецЕсли;
	//}}__КОНСТРУКТОР_ВВОД_НА_ОСНОВАНИИ
КонецПроцедуры
