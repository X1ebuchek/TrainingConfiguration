
Функция СписокGET(Запрос)
	
	HTTPСервисОтвет = Новый HTTPСервисОтвет(200);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаказПокупателя.Представление КАК Представление,
		|	ЗаказПокупателя.Стол.Представление КАК СтолПредставление,
		|	ЗаказПокупателя.СтатусЗаказа КАК СтатусЗаказа,
		|	ЗаказПокупателя.КоличествоГостей КАК КоличествоГостей
		|ИЗ
		|	Документ.ЗаказПокупателя КАК ЗаказПокупателя";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	СоответствиеОтвет = Новый Соответствие;
	
	Пока Выборка.Следующий() Цикл 
		
		СоответствиеЗаказа = Новый Соответствие;
		СоответствиеЗаказа.Вставить("КоличествоГостей", Выборка.КоличествоГостей);
		СоответствиеЗаказа.Вставить("Стол", Выборка.СтолПредставление);
		СоответствиеЗаказа.Вставить("СтатусЗаказа", Строка(Выборка.СтатусЗаказа));
			
		СоответствиеОтвет.Вставить(Выборка.Представление, СоответствиеЗаказа);
		
	КонецЦикла;
	
    ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.УстановитьСтроку();
	ЗаписатьJSON(ЗаписьJSON, СоответствиеОтвет);
	ОтветJSON = ЗаписьJSON.Закрыть();
	
	HTTPСервисОтвет.УстановитьТелоИзСтроки(ОтветJSON, КодировкаТекста.UTF8);
	Возврат HTTPСервисОтвет;	

	
КонецФункции

Функция ЗаказGET(Запрос) 
	
	Номер = Запрос.ПараметрыURL["id"];
	
	HTTPСервисОтвет = Новый HTTPСервисОтвет(200);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаказПокупателя.Представление КАК Представление,
		|	ЗаказПокупателя.Стол.Представление КАК СтолПредставление,
		|	ЗаказПокупателя.СтатусЗаказа КАК СтатусЗаказа,
		|	ЗаказПокупателя.КоличествоГостей КАК КоличествоГостей,
		|	ЗаказПокупателя.Номер КАК Номер
		|ИЗ
		|	Документ.ЗаказПокупателя КАК ЗаказПокупателя
		|ГДЕ
		|	ЗаказПокупателя.Номер = &Номер";
	
	Запрос.УстановитьПараметр("Номер", Номер);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	СоответствиеОтвет = Новый Соответствие;
	
	Пока Выборка.Следующий() Цикл 
		
		СоответствиеЗаказа = Новый Соответствие; 
		СоответствиеЗаказа.Вставить("Номер", Выборка.Номер);
		СоответствиеЗаказа.Вставить("КоличествоГостей", Выборка.КоличествоГостей);
		СоответствиеЗаказа.Вставить("Стол", Выборка.СтолПредставление);
		СоответствиеЗаказа.Вставить("СтатусЗаказа", Строка(Выборка.СтатусЗаказа));	
			
		СоответствиеОтвет.Вставить(Выборка.Представление, СоответствиеЗаказа);
		
	КонецЦикла;
	
	Если СоответствиеОтвет.Количество() = 0 Тогда
		
		HTTPСервисОтвет.УстановитьТелоИзСтроки("Заказа с таким номером не существует", КодировкаТекста.UTF8);
		Возврат HTTPСервисОтвет;	
		
	КонецЕсли;
	
	
	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.УстановитьСтроку();
	ЗаписатьJSON(ЗаписьJSON, СоответствиеОтвет);
	ОтветJSON = ЗаписьJSON.Закрыть();
	
	HTTPСервисОтвет.УстановитьТелоИзСтроки(ОтветJSON, КодировкаТекста.UTF8);
	Возврат HTTPСервисОтвет;
КонецФункции


Функция ЗаказDELETE(Запрос) 
	
	HTTPСервисОтвет = Новый HTTPСервисОтвет(200);
	
	Номер = Запрос.ПараметрыURL["id"];
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаказПокупателя.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.ЗаказПокупателя КАК ЗаказПокупателя
		|ГДЕ
		|	ЗаказПокупателя.Номер = &Номер";
	
	Запрос.УстановитьПараметр("Номер", Номер);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Ссылка = Выборка.Ссылка;
		
	КонецЦикла;
	
	ОбъектЗаказ = Ссылка.ПолучитьОбъект();
	Если ОбъектЗаказ.ПометкаУдаления = Ложь Тогда
		
		ОбъектЗаказ.УстановитьПометкуУдаления(Истина);
	    HTTPСервисОтвет.УстановитьТелоИзСтроки("Успешно", КодировкаТекста.UTF8);				
	Иначе
		
		HTTPСервисОтвет.УстановитьТелоИзСтроки("У данного документа уже существует пометка на удаление", КодировкаТекста.UTF8);		
	КонецЕсли;
	
	Возврат HTTPСервисОтвет;

КонецФункции


Функция СтатусЗаказаGET(Запрос)
	
	Номер = Запрос.ПараметрыURL["id"];
	
	HTTPСервисОтвет = Новый HTTPСервисОтвет(200);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаказПокупателя.СтатусЗаказа КАК СтатусЗаказа
		|ИЗ
		|	Документ.ЗаказПокупателя КАК ЗаказПокупателя
		|ГДЕ
		|	ЗаказПокупателя.Номер = &Номер";
	
	Запрос.УстановитьПараметр("Номер", Номер);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Количество() = 0 Тогда
		
		HTTPСервисОтвет.УстановитьТелоИзСтроки("Заказа с таким номером не существует", КодировкаТекста.UTF8);
		Возврат HTTPСервисОтвет;
		
	КонецЕсли;
	
	Пока Выборка.Следующий() Цикл 
		
		Статус = Выборка.СтатусЗаказа;
		
	КонецЦикла;
	
	
	HTTPСервисОтвет.УстановитьТелоИзСтроки(Статус, КодировкаТекста.UTF8);
	Возврат HTTPСервисОтвет;

КонецФункции


Функция СтатусЗаказаPUT(Запрос)
	
	HTTPСервисОтвет = Новый HTTPСервисОтвет(200);
	
	Номер = Запрос.ПараметрыURL["id"]; 
	СтатусПараметр = Запрос.ПараметрыЗапроса.Получить("status");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаказПокупателя.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.ЗаказПокупателя КАК ЗаказПокупателя
		|ГДЕ
		|	ЗаказПокупателя.Номер = &Номер";
	
	Запрос.УстановитьПараметр("Номер", Номер);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Ссылка = Выборка.Ссылка;
		
	КонецЦикла;
	
	ОбъектЗаказ = Ссылка.ПолучитьОбъект(); 
	Если Метаданные.Перечисления.СтатусыЗаказов.ЗначенияПеречисления.Найти(СтатусПараметр) = Неопределено Тогда
		
		 HTTPСервисОтвет.УстановитьТелоИзСтроки("Статус ( " + СтатусПараметр + " ) не существует", КодировкаТекста.UTF8);
	
	ИначеЕсли ОбъектЗаказ.ПометкаУдаления = Истина Тогда
		
		HTTPСервисОтвет.УстановитьТелоИзСтроки("У документа ( " + Номер + " ) есть пометка на удаление", КодировкаТекста.UTF8);		
	
	ИначеЕсли ОбъектЗаказ.СтатусЗаказа <> Перечисления.СтатусыЗаказов[СтатусПараметр] Тогда
		
		ОбъектЗаказ.СтатусЗаказа = Перечисления.СтатусыЗаказов[СтатусПараметр]; 
	    HTTPСервисОтвет.УстановитьТелоИзСтроки("Успешно", КодировкаТекста.UTF8);
		ОбъектЗаказ.Записать(РежимЗаписиДокумента.Проведение);  
		
	Иначе
		
		HTTPСервисОтвет.УстановитьТелоИзСтроки("У документа ( " + Номер + " ) уже статус ( " + СтатусПараметр + " )", КодировкаТекста.UTF8);		
	КонецЕсли;
	
	Возврат HTTPСервисОтвет;
	
КонецФункции

