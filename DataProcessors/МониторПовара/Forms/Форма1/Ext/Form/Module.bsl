&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПодготовитьНачальныеДанные();
	
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)    
	
	ПодключитьОбработчикОжидания("ОбновитьТаймер", 1);
	
КонецПроцедуры


&НаСервере
Процедура ПодготовитьНачальныеДанные()
	
	ТекущийСотрудник = ПараметрыСеанса.ТекущийСотрудник;
	
	#область Заполнить_один_тренировочный_заказ
	
		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаказПокупателяБлюда.Блюдо КАК Блюдо,
		|	ЗаказПокупателяБлюда.Количество КАК Количество,
		|	ЗаказПокупателяБлюда.Блюдо.ВремяПриготовления КАК ВремяПриготовления,
		|	ЗаказПокупателяБлюда.Ссылка КАК Заказ,
		|	ЗаказПокупателяБлюда.Ссылка.Стол КАК Стол,
		|	ЗаказПокупателяБлюда.Ссылка.КоличествоГостей КАК КоличествоГостей,
		|	ЗаказПокупателяБлюда.Ссылка.Дата КАК Дата,
		|	ЗаказПокупателяБлюда.Ссылка.Номер КАК Номер,
		|	ЗаказПокупателяБлюда.Ссылка.Стол.Представление КАК СтолПредставление
		|ИЗ
		|	Документ.ЗаказПокупателя.Блюда КАК ЗаказПокупателяБлюда
		|ГДЕ
		|	ЗаказПокупателяБлюда.Ссылка.СтатусЗаказа В(&СтатусыЗаказа)
		|	И ЗаказПокупателяБлюда.Ссылка.Проведен = ИСТИНА
		|ИТОГИ
		|	МАКСИМУМ(Стол),
		|	МАКСИМУМ(КоличествоГостей),
		|	МАКСИМУМ(Дата),
		|	МИНИМУМ(Номер)
		|ПО
		|	Заказ";
	
	СтатусыЗаказа = Новый Массив;
	СтатусыЗаказа.Добавить(Перечисления.СтатусыЗаказов.Новый);
	СтатусыЗаказа.Добавить(Перечисления.СтатусыЗаказов.ВзятВРаботу);
	
	Запрос.УстановитьПараметр("СтатусыЗаказа", СтатусыЗаказа);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаЗаказ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Если ВыборкаЗаказ.Следующий() Тогда

		НомерЗаказа = 1;	
		Заказ = ВыборкаЗаказ.Заказ; 
		ЗаказПредставление = СтрШаблон("Заказ №%1 (гостей %2)%3Стол %4",
								ВыборкаЗаказ.Номер,
								ВыборкаЗаказ.КоличествоГостей,
								Символы.ПС,
								ВыборкаЗаказ.СтолПредставление);
								
		ВремяОжидания = ВыборкаЗаказ.Дата;
		
		ВыборкаДетальныеЗаписи = ВыборкаЗаказ.Выбрать();
			
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			СтрокаТаблицы = ТаблицаЗаказ.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТаблицы, ВыборкаДетальныеЗаписи);
			
		КонецЦикла;
	КонецЕсли;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	
             
	#КонецОбласти

КонецПроцедуры


&НаКлиенте
Процедура ОбновитьТаймер()

	ТекущаяДата = ТекущаяДата();	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаказПредставлениеНажатие(Элемент, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
КонецПроцедуры




