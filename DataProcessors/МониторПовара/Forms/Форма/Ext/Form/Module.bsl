

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПодготовитьНачальныеДанные(); 
	
	ИзменитьРеквизитыФормы(); 
	
	ДобавитьКомандыИЭлементы();
	
	ДобавитьЭлементыФормыВЦикле();
	
	ДобавитьУсловноеОформление();
	
	ЗаполнитьЗаказыДанными();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)    
	
	ПоследнееРучноеОбновление = ТекущаяДата();
	ПодключитьОбработчикОжидания("ОбновитьТаймер", 1);
	ПодключитьОбработчикОжидания("ОбновитьДанные", 1);
	
КонецПроцедуры

&НаСервере
Процедура КоличествоЗаказовНаМонитореПриИзмененииНаСервере()
	
	Для Индекс = 1 По 8 Цикл
		НайденныйЭлемент = Элементы.Найти("ГруппаВертикальнаяЗаказы" + Индекс);
		Если НЕ НайденныйЭлемент = Неопределено Тогда
		    Элементы.Удалить(НайденныйЭлемент);
		КонецЕсли;
	КонецЦикла;

	
	ДобавитьЭлементыФормыВЦикле();
	ДобавитьУсловноеОформление();	
	ЗаполнитьЗаказыДанными();
	
КонецПроцедуры

&НаКлиенте
Процедура КоличествоЗаказовНаМонитореПриИзменении(Элемент)
	КоличествоЗаказовНаМонитореПриИзмененииНаСервере();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаСервере
Процедура ДобавитьКомандыИЭлементы()

	КомандаПредыдущаяСтраница = Команды.Добавить("ПредыдущаяСтраница");
	КомандаПредыдущаяСтраница.Действие = "ЛистатьСтраницы";
	
	КомандаСледующаяСтраница = Команды.Добавить("СледующаяСтраница");
	КомандаСледующаяСтраница.Действие = "ЛистатьСтраницы";    
	
	Для Индекс = 1 По 8 Цикл
		
		КомандаГотов = Команды.Добавить("ИзменитьГотовность" + Индекс); 
		КомандаГотов.Действие = "ИзменитьСтатусГотовности"; 
		
	КонецЦикла;
	
	НовыйЭлемент = Элементы.Вставить("ПредыдущаяСтраница", Тип("КнопкаФормы"), Элементы.ГруппаПодвал);
	НовыйЭлемент.Заголовок = "<<";  
	НовыйЭлемент.ИмяКоманды = "ПредыдущаяСтраница";
	
	НовыйЭлемент = Элементы.Вставить("СледующаяСтраница", Тип("КнопкаФормы"), Элементы.ГруппаПодвал);
	НовыйЭлемент.Заголовок = ">>";
    НовыйЭлемент.ИмяКоманды = "СледующаяСтраница"; 
	
КонецПроцедуры

&НаКлиенте
Процедура ЛистатьСтраницы(Команды)

	Если Команды.Имя = "СледующаяСтраница" Тогда
		
		НачальныйНомерЗаказа = НачальныйНомерЗаказа + КоличествоЗаказовНаМониторе;
		
	Иначе
		
		НачальныйНомерЗаказа = НачальныйНомерЗаказа - КоличествоЗаказовНаМониторе;
		НачальныйНомерЗаказа = ?(НачальныйНомерЗаказа < 1, 1, НачальныйНомерЗаказа);
		
	КонецЕсли; 
	
	ЗаполнитьЗаказыДанными()
	
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииБлюдоГотово(Команда)
	
	ЗаказПолностьюГотов = Ложь;
	
	ХотьОдноГотово = Ложь;
	ВсеГотово = Истина;
	
	Таблица = ЭтотОбъект["ТаблицаЗаказ" + Прав(Лев(Команда.Имя, 13), 1)];
	СсылкаНаЗаказ = ЭтотОбъект["Заказ" + Прав(Лев(Команда.Имя, 13), 1)]; 
	
	Если Не ЗначениеЗаполнено(СсылкаНаЗаказ) Тогда
		
		Возврат;
		
	КонецЕсли;
	
	
	Для Каждого Строка Из Таблица Цикл
		Если Строка.БлюдоГотово = Истина Тогда
			ХотьОдноГотово = Истина;
		Иначе
			ВсеГотово = Ложь;
		КонецЕсли;
	КонецЦикла;
	
	Если ВсеГотово Тогда
		ИзменениеСтатусаЗаказаНаСервере(СсылкаНаЗаказ, "Готов");
		ЗаказПолностьюГотов = Истина; 		
	ИначеЕсли ХотьОдноГотово Тогда
		ИзменениеСтатусаЗаказаНаСервере(СсылкаНаЗаказ, "ВзятВРаботу");	
	КонецЕсли;
	
	ИзменениеГотовностиБлюдНаСервере(СсылкаНаЗаказ, Прав(Лев(Команда.Имя, 13), 1));	
	
	Если ЗаказПолностьюГотов Тогда
		ПоследнееРучноеОбновление = ТекущаяДата() - 60;
	КонецЕсли;
	
	
КонецПроцедуры 

&НаКлиенте
Процедура ИзменитьСтатусГотовности(Команды)

	 Имя = Команды.Имя; 
	 СсылкаНаЗаказ = ЭтотОбъект["Заказ" + Прав(Имя, 1)];
	 
	 Если ЗначениеЗаполнено(СсылкаНаЗаказ) Тогда 
		 ИзменениеСтатусаЗаказаНаСервере(СсылкаНаЗаказ, "Готов");
		 ПоследнееРучноеОбновление = ТекущаяДата() - 60;
	 КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьДокумент(Команда, СтандартнаяОбработка)
	
    СтандартнаяОбработка = Ложь;
	Имя = Команда.Имя;
	СсылкаНаЗаказ = ЭтотОбъект["Заказ" + Прав(Имя, 1)];
	
	ПоказатьЗначение(Новый ОписаниеОповещения("ОткрытьДокументЗавершение", ЭтотОбъект), СсылкаНаЗаказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьДокументЗавершение(ДополнительныеПараметры) Экспорт
	
	
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПодготовитьНачальныеДанные()
	
	ТекущийСотрудник = ПараметрыСеанса.ТекущийСотрудник;
	
	КоличествоЗаказовНаМониторе = 6;
	
	НачальныйНомерЗаказа = 1;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЗаказыДанными()
	
	ОчиститьРеквизиты();
	
	РезультатЗапроса = РезультатЗапросаПоЗаказам();
	
	ВыборкаЗаказ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Элементы.ДекорацияЗаказовОжидает.Заголовок = "Заказов ожидает " + ВыборкаЗаказ.Количество();
	НомерВСпискеЗаказов = 1; 
	ИндексРеквизитов = 1;
	
	Пока ВыборкаЗаказ.Следующий() Цикл
		
		Если НомерВСпискеЗаказов < НачальныйНомерЗаказа Тогда
			
			НомерВСпискеЗаказов = НомерВСпискеЗаказов + 1;
			Продолжить;
			
		КонецЕсли;
		
		
		Если НомерВСпискеЗаказов > НачальныйНомерЗаказа + КоличествоЗаказовНаМониторе - 1 Тогда 
			
			Прервать;
			
		КонецЕсли;
		

		ЭтотОбъект["НомерЗаказа" + ИндексРеквизитов] = НомерВСпискеЗаказов;	
		ЭтотОбъект["Заказ" + ИндексРеквизитов] = ВыборкаЗаказ.Заказ; 
		ЭтотОбъект["ЗаказПредставление" + ИндексРеквизитов] = СтрШаблон("Заказ №%1 (гостей %2)%3Стол %4",
								ВыборкаЗаказ.Номер,
								ВыборкаЗаказ.КоличествоГостей,
								Символы.ПС,
								ВыборкаЗаказ.СтолПредставление);
								
		ЭтотОбъект["ЗаказДата" + ИндексРеквизитов] = ВыборкаЗаказ.Дата;
		
		ЭтотОбъект["МаксимальноеВремяПриготовления" + ИндексРеквизитов] = НачалоДня(ТекущаяДата()) + ВыборкаЗаказ.ВремяПриготовления;
		
		
		
		Если ВыборкаЗаказ.СтолПредставление = "Доставка" Тогда
			
			Элементы["ГруппаВертикальнаяЗаказ" + ИндексРеквизитов].ЦветФона = WebЦвета.Желтый;
			
		Иначе
			
			Элементы["ГруппаВертикальнаяЗаказ" + ИндексРеквизитов].ЦветФона = WebЦвета.Белый;
			
		КонецЕсли;
		
		
		ВыборкаДетальныеЗаписи = ВыборкаЗаказ.Выбрать();
			
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			СтрокаТаблицы = ЭтотОбъект["ТаблицаЗаказ" + ИндексРеквизитов].Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТаблицы, ВыборкаДетальныеЗаписи);
						
		КонецЦикла;
		
		ИндексРеквизитов = ИндексРеквизитов + 1;
		НомерВСпискеЗаказов = НомерВСпискеЗаказов + 1;
	КонецЦикла;	 
	
	Для Индекс = ИндексРеквизитов По КоличествоЗаказовНаМониторе Цикл
		
		Элементы["ГруппаВертикальнаяЗаказ" + Индекс].ЦветФона = WebЦвета.Белый;	
		
	КонецЦикла;
	
	
КонецПроцедуры

&НаСервере
Функция РезультатЗапросаПоЗаказам()
	
	Перем Запрос, РезультатЗапроса, СтатусыЗаказа;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗаказПокупателяБлюда.Блюдо КАК Блюдо,
	|	ЗаказПокупателяБлюда.Количество КАК Количество,
	|	ЗаказПокупателяБлюда.БлюдоГотово КАК БлюдоГотово,
	|	ЗаказПокупателяБлюда.Блюдо.ВремяПриготовления КАК ВремяПриготовления,
	|	ЗаказПокупателяБлюда.Ссылка КАК Заказ,
	|	ЗаказПокупателяБлюда.Ссылка.Стол КАК Стол,
	|	ЗаказПокупателяБлюда.Ссылка.КоличествоГостей КАК КоличествоГостей,
	|	ЗаказПокупателяБлюда.Ссылка.Дата КАК Дата,
	|	ЗаказПокупателяБлюда.Ссылка.Номер КАК Номер,
	|	ЗаказПокупателяБлюда.Ссылка.Стол.Представление КАК СтолПредставление
	|ИЗ
	|	Документ.ЗаказПокупателя.Блюда КАК ЗаказПокупателяБлюда
	|ГДЕ
	|	ЗаказПокупателяБлюда.Ссылка.Проведен = ИСТИНА
	|	И ((ЗаказПокупателяБлюда.Ссылка.Повар = &ТекущийПользователь
	|				И ЗаказПокупателяБлюда.Ссылка.СтатусЗаказа = &СтатусВРаботе)
	|			ИЛИ ЗаказПокупателяБлюда.Ссылка.СтатусЗаказа = &СтатусНовый)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата
	|ИТОГИ
	|	МАКСИМУМ(ВремяПриготовления),
	|	МАКСИМУМ(Стол),
	|	МАКСИМУМ(КоличествоГостей),
	|	МАКСИМУМ(Дата),
	|	МИНИМУМ(Номер)
	|ПО
	|	Заказ";
	
	//СтатусыЗаказа = Новый Массив;
	//СтатусыЗаказа.Добавить(Перечисления.СтатусыЗаказов.Новый);
	//СтатусыЗаказа.Добавить(Перечисления.СтатусыЗаказов.ВзятВРаботу);
	//
	//Запрос.УстановитьПараметр("СтатусыЗаказа", СтатусыЗаказа);
	Запрос.УстановитьПараметр("ТекущийПользователь", ПараметрыСеанса.ТекущийСотрудник);
	Запрос.УстановитьПараметр("СтатусВРаботе", Перечисления.СтатусыЗаказов.ВзятВРаботу);
	Запрос.УстановитьПараметр("СтатусНовый", Перечисления.СтатусыЗаказов.Новый);
	
	РезультатЗапроса = Запрос.Выполнить();
	Возврат РезультатЗапроса;

КонецФункции

&НаСервере
Процедура ОчиститьРеквизиты()
		
	Для к = 1 по КоличествоЗаказовНаМониторе Цикл
		
		ЭтотОбъект["НомерЗаказа" + к] = НачальныйНомерЗаказа + к - 1;	
		ЭтотОбъект["Заказ" + к] = Неопределено; 
		ЭтотОбъект["ЗаказПредставление" + к] = Неопределено;								
		ЭтотОбъект["ВремяОжидания" + к] = Неопределено;
		ЭтотОбъект["ТаблицаЗаказ" + к].Очистить();  
		
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьТаймер()

	ТекущаяДата = ТекущаяДата();
	
	Для Индекс = 1 По КоличествоЗаказовНаМониторе Цикл
		
		Если ЗначениеЗаполнено(ЭтотОбъект["Заказ" + Индекс]) Тогда
			
			ЭтотОбъект["ВремяОжидания" + Индекс] = НачалоДня(ТекущаяДата()) + (ТекущаяДата() - ЭтотОбъект["ЗаказДата" + Индекс]);	
			
		КонецЕсли;
		
		
	КонецЦикла;
	
	
КонецПроцедуры 

&НаКлиенте
Процедура ОбновитьДанные()

	Если (ТекущаяДата() - ПоследнееРучноеОбновление) >= 60 Тогда 
		
		ПоследнееРучноеОбновление = ТекущаяДата();
		
		ЗаполнитьЗаказыДанными();	
		
	КонецЕсли;
	

КонецПроцедуры

&НаСервере
Процедура ИзменитьРеквизитыФормы() 
	
	МассивДобавляемыхРеквизитов = Новый Массив;
	
	Индекс = 1;
	
	Пока Индекс <= 8 Цикл
		
		ДобавитьРеквизитыВМассив(МассивДобавляемыхРеквизитов, Индекс);
		
		Индекс = Индекс + 1;
		
	КонецЦикла;
	
	ИзменитьРеквизиты(МассивДобавляемыхРеквизитов);	
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();
	
	Для Индекс = 1 по КоличествоЗаказовНаМониторе Цикл
		
		ИмяТаблицы = "ТаблицаЗаказ" + Индекс;
		
		ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
		ОформляемоеПоле = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
		ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных(ИмяТаблицы + "Блюдо"); 
		
		ОформляемоеПоле = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
		ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных(ИмяТаблицы + "Количество");
		
		ОформляемоеПоле = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
		ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных(ИмяТаблицы + "ВремяПриготовления");
		
		ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.СветлоНебесноГолубой);
		
		ГруппаОтбораИ = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных")); 
		ГруппаОтбораИ.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
		
		ЭлементОтбора = ГруппаОтбораИ.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных")); 
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ИмяТаблицы + ".Количество");
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Больше;
		ЭлементОтбора.ПравоеЗначение = 1;
		
		ЭлементОтбора = ГруппаОтбораИ.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ИмяТаблицы + ".Блюдо");
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Заполнено;
		
		//Проверка на готовность
		
		ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
		ОформляемоеПоле = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
		ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных(ИмяТаблицы + "Блюдо"); 
		
		ОформляемоеПоле = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
		ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных(ИмяТаблицы + "Количество");
		
		ОформляемоеПоле = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
		ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных(ИмяТаблицы + "ВремяПриготовления");
		
		ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.Зеленый);
		
		ГруппаОтбораИ = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных")); 
		ГруппаОтбораИ.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
		
		ЭлементОтбора = ГруппаОтбораИ.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных")); 
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ИмяТаблицы + ".БлюдоГотово");
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.ПравоеЗначение = Истина;
		
		ЭлементОтбора = ГруппаОтбораИ.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ИмяТаблицы + ".Блюдо");
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Заполнено;
		
		// Проверка на время ожидания
		
		ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
		ОформляемоеПоле = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
		ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("ЗаказПредставление" + Индекс);
		
		ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.Красный);
		
		ГруппаОтбораИ = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных")); 
		ГруппаОтбораИ.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
		
		ЭлементОтбора = ГруппаОтбораИ.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных")); 
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ВремяОжидания" + Индекс);
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Больше;
		ЭлементОтбора.ПравоеЗначение = Новый ПолеКомпоновкиДанных("МаксимальноеВремяПриготовления" + Индекс);		
				
	КонецЦикла;
	
	
КонецПроцедуры 

&НаСервере
Процедура ДобавитьРеквизитыВМассив(МассивДобавляемыхРеквизитов, ИндексЗаказа) 
	
	ОписаниеТипаКоличество = Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15,3)); 
	
	СоздатьИДобавитьВМассивНовыйРеквизит("ВремяОжидания", ИндексЗаказа, Новый ОписаниеТипов("Дата",,,Новый КвалификаторыДаты(ЧастиДаты.ДатаВремя)),, "Время ожидания", МассивДобавляемыхРеквизитов); 
	СоздатьИДобавитьВМассивНовыйРеквизит("Заказ", ИндексЗаказа, Новый ОписаниеТипов("ДокументСсылка.ЗаказПокупателя"),, "Заказ", МассивДобавляемыхРеквизитов);
	СоздатьИДобавитьВМассивНовыйРеквизит("ЗаказДата", ИндексЗаказа, Новый ОписаниеТипов("Дата",,,Новый КвалификаторыДаты(ЧастиДаты.ДатаВремя)),, "Дата заказа", МассивДобавляемыхРеквизитов);
	СоздатьИДобавитьВМассивНовыйРеквизит("ЗаказПредставление", ИндексЗаказа, Новый ОписаниеТипов("Строка"),, "Заказ представление", МассивДобавляемыхРеквизитов);
	СоздатьИДобавитьВМассивНовыйРеквизит("НомерЗаказа", ИндексЗаказа, Новый ОписаниеТипов("Число"),, "Номер заказа", МассивДобавляемыхРеквизитов);
	СоздатьИДобавитьВМассивНовыйРеквизит("МаксимальноеВремяПриготовления", ИндексЗаказа, Новый ОписаниеТипов("Дата",,,Новый КвалификаторыДаты(ЧастиДаты.ДатаВремя)),, "Максимальное время приготовления", МассивДобавляемыхРеквизитов);
	
	СоздатьИДобавитьВМассивНовыйРеквизит("ТаблицаЗаказ", ИндексЗаказа, Новый ОписаниеТипов("ТаблицаЗначений"),, "Таблица заказ", МассивДобавляемыхРеквизитов);
	
	СоздатьИДобавитьВМассивНовыйРеквизит("БлюдоГотово",, Новый ОписаниеТипов("Булево"), "ТаблицаЗаказ" + ИндексЗаказа, "Блюдо готово", МассивДобавляемыхРеквизитов); 
	СоздатьИДобавитьВМассивНовыйРеквизит("Блюдо",, Новый ОписаниеТипов("СправочникСсылка.Блюда"), "ТаблицаЗаказ" + ИндексЗаказа, "Блюдо", МассивДобавляемыхРеквизитов);
	СоздатьИДобавитьВМассивНовыйРеквизит("Количество",, ОписаниеТипаКоличество, "ТаблицаЗаказ" + ИндексЗаказа, "Количество", МассивДобавляемыхРеквизитов);
	СоздатьИДобавитьВМассивНовыйРеквизит("ВремяПриготовления",, Новый ОписаниеТипов("Число"), "ТаблицаЗаказ" + ИндексЗаказа, "Время приготовления", МассивДобавляемыхРеквизитов);	
	
КонецПроцедуры

&НаСервере
Процедура СоздатьИДобавитьВМассивНовыйРеквизит(НаименованиеРеквизита, ИндексЗаказа = "", ОписаниеТипа, Путь = "",  Заголовок, МассивДобавляемыхРеквизитов)
	
	НовыйРеквизит = Новый РеквизитФормы(НаименованиеРеквизита + ИндексЗаказа, ОписаниеТипа, Путь, Заголовок);
	МассивДобавляемыхРеквизитов.Добавить(НовыйРеквизит);
	
КонецПроцедуры
  
&НаСервере
Процедура ДобавитьЭлементыФормыВЦикле()
	
	МассивДобавляемыхРеквизитов = Новый Массив;
	
	Индекс = 1;
	
	Пока Индекс <= КоличествоЗаказовНаМониторе Цикл
		
		ДобавитьЭлементыФормыПоИндексу(Индекс);
		
		Индекс = Индекс + 1;
		
	КонецЦикла;
	
КонецПроцедуры  

&НаСервере
Процедура ДобавитьЭлементыФормыПоИндексу(Индекс)  
	
	ГлавнаяГруппа = Элементы.ГруппаГоризонтальнаяВсеЗаказы;
	
	ГруппаРодительВертикальная = ДобавлениеВертикальнойГруппы(ГлавнаяГруппа, Индекс);
	ГруппаРодительВертикальная.Вид = ВидГруппыФормы.ОбычнаяГруппа; 
	ГруппаРодительВертикальная.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
    ГруппаРодительВертикальная.ОтображатьЗаголовок = Ложь;
	ГруппаРодительВертикальная.Отображение = ОтображениеОбычнойГруппы.Нет;

	
	ГруппаВертикальнаяЗаказ = Элементы.Вставить("ГруппаВертикальнаяЗаказ" + Индекс, Тип("ГруппаФормы"), ГруппаРодительВертикальная);
	ГруппаВертикальнаяЗаказ.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	ГруппаВертикальнаяЗаказ.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	ГруппаВертикальнаяЗаказ.ОтображатьЗаголовок = Ложь; 
	ГруппаВертикальнаяЗаказ.Отображение = ОтображениеОбычнойГруппы.Нет;

	
	ГруппаШапкаЗаказа 	= Элементы.Вставить("ГруппаШапкаЗаказа" + Индекс, Тип("ГруппаФормы"), ГруппаВертикальнаяЗаказ);
	ГруппаШапкаЗаказа.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	ГруппаШапкаЗаказа.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
	ГруппаШапкаЗаказа.ОтображатьЗаголовок = Ложь;
	ГруппаШапкаЗаказа.Отображение = ОтображениеОбычнойГруппы.Нет;
	
	КнопкаГотов = Элементы.Вставить("ИзменитьГотовность" + Индекс, Тип("КнопкаФормы"), ГруппаШапкаЗаказа);
	КнопкаГотов.Заголовок = "Готов";       
	КнопкаГотов.ИмяКоманды = "ИзменитьГотовность" + Индекс;
	
	НомерЗаказа 			= Элементы.Вставить("НомерЗаказа" + Индекс, Тип("ПолеФормы"), ГруппаШапкаЗаказа);
	НомерЗаказа.Вид 		= ВидПоляФормы.ПолеНадписи; 
	НомерЗаказа.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
	НомерЗаказа.ПутьКДанным = "НомерЗаказа" + Индекс;
	НомерЗаказа.Рамка = Новый Рамка(ТипРамкиЭлементаУправления.Одинарная, 1);
	НомерЗаказа.Шрифт = Новый Шрифт(,14, Истина); 
	НомерЗаказа.Ширина = 3;
	
	ЗаказПредставление		 		= Элементы.Вставить("ЗаказПредставление" + Индекс, Тип("ПолеФормы"), ГруппаШапкаЗаказа);
	ЗаказПредставление.Гиперссылка = Истина;
	ЗаказПредставление.УстановитьДействие("Нажатие", "ОткрытьДокумент");
	ЗаказПредставление.ПутьКДанным  = "ЗаказПредставление" + Индекс; 
	ЗаказПредставление.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
	ЗаказПредставление.Высота = 2;
	
	ВремяОжидания 				= Элементы.Вставить("ВремяОжидания" + Индекс, Тип("ПолеФормы"), ГруппаШапкаЗаказа);
	ВремяОжидания.Вид   		= ВидПоляФормы.ПолеНадписи;
	ВремяОжидания.ПутьКДанным   = "ВремяОжидания" + Индекс; 
	ВремяОжидания.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;	
	ВремяОжидания.Рамка = Новый Рамка(ТипРамкиЭлементаУправления.Одинарная, 1);
	ВремяОжидания.Шрифт = Новый Шрифт(,14, Истина);
	ВремяОжидания.Формат = "ДФ=ЧЧ:мм:сс";
	ВремяОжидания.Ширина = 8;

	
	ИмяТаблицы = "ТаблицаЗаказ" + Индекс;
	
	ТаблицаЗаказ 			 = Элементы.Вставить(ИмяТаблицы, Тип("ТаблицаФормы"), ГруппаВертикальнаяЗаказ);
	ТаблицаЗаказ.ПутьКДанным = ИмяТаблицы;
	ТаблицаЗаказ.АвтоВводНовойСтроки = Ложь;
	ТаблицаЗаказ.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
	ТаблицаЗаказ.РежимВыделения = РежимВыделенияТаблицы.Одиночный;
	ТаблицаЗаказ.Шапка = Ложь;
	ТаблицаЗаказ.КоманднаяПанель.Видимость = Ложь;
	
	ТаблицаЗаказБлюдоГотово 		= Элементы.Вставить(ИмяТаблицы + "БлюдоГотово", Тип("ПолеФормы"), ТаблицаЗаказ);
	ТаблицаЗаказБлюдоГотово.Вид = ВидПоляФормы.ПолеФлажка;
	ТаблицаЗаказБлюдоГотово.ПутьКДанным = ИмяТаблицы + ".БлюдоГотово";
	ТаблицаЗаказБлюдоГотово.УстановитьДействие("ПриИзменении", "ПриИзмененииБлюдоГотово");
	
	ТаблицаЗаказБлюдо 				= Элементы.Вставить(ИмяТаблицы + "Блюдо", Тип("ПолеФормы"), ТаблицаЗаказ);
	ТаблицаЗаказБлюдо.Вид = ВидПоляФормы.ПолеВвода;
	ТаблицаЗаказБлюдо.ПутьКДанным = ИмяТаблицы + ".Блюдо";
	ТаблицаЗаказБлюдо.ТолькоПросмотр = Истина;
	
	ТаблицаЗаказКоличество 			= Элементы.Вставить(ИмяТаблицы + "Количество", Тип("ПолеФормы"), ТаблицаЗаказ); 
	ТаблицаЗаказКоличество.Вид = ВидПоляФормы.ПолеВвода;
	ТаблицаЗаказКоличество.ПутьКДанным = ИмяТаблицы + ".Количество";
	ТаблицаЗаказКоличество.ТолькоПросмотр = Истина;
	ТаблицаЗаказКоличество.Ширина = 6; 
	ТаблицаЗаказКоличество.АвтоМаксимальнаяШирина = Ложь;
	ТаблицаЗаказКоличество.МаксимальнаяШирина = 6;
	
	ТаблицаЗаказВремяПриготовления  = Элементы.Вставить(ИмяТаблицы + "ВремяПриготовления", Тип("ПолеФормы"), ТаблицаЗаказ);
	ТаблицаЗаказВремяПриготовления.Вид = ВидПоляФормы.ПолеВвода;
	ТаблицаЗаказВремяПриготовления.ПутьКДанным = ИмяТаблицы + ".ВремяПриготовления";
	ТаблицаЗаказВремяПриготовления.ТолькоПросмотр = Истина;
	ТаблицаЗаказВремяПриготовления.Ширина = 6; 
	ТаблицаЗаказКоличество.АвтоМаксимальнаяШирина = Ложь;
	ТаблицаЗаказКоличество.МаксимальнаяШирина = 6;

	
КонецПроцедуры

&НаСервере
Функция ДобавлениеВертикальнойГруппы(Знач ГлавнаяГруппа, Знач Индекс)
	
	Перем ГруппаВертикальнаяЗаказы, ГруппаРодительВертикальная;
	
	Если Индекс % 2 = 1 Тогда
		
		ГруппаВертикальнаяЗаказы = Элементы.Вставить("ГруппаВертикальнаяЗаказы" + Индекс, Тип("ГруппаФормы"), ГлавнаяГруппа);
		
	КонецЕсли;
	
	ГруппаРодительВертикальная = Элементы["ГруппаВертикальнаяЗаказы" + ?(Индекс % 2 = 0, Индекс - 1, Индекс)];
	Возврат ГруппаРодительВертикальная;
	
КонецФункции

&НаСервере
Процедура ИзменениеСтатусаЗаказаНаСервере(СсылкаНаЗаказ, Статус)
	
	ОбъектЗаказ = СсылкаНаЗаказ.ПолучитьОбъект();
	Блюда = ОбъектЗаказ.Блюда;
	Если ОбъектЗаказ.СтатусЗаказа <> Перечисления.СтатусыЗаказов[Статус] Тогда
		ОбъектЗаказ.СтатусЗаказа = Перечисления.СтатусыЗаказов[Статус];
		ОбъектЗаказ.Повар = ПараметрыСеанса.ТекущийСотрудник;
		ОбъектЗаказ.Записать(РежимЗаписиДокумента.Проведение);
 	КонецЕсли;
	
КонецПроцедуры 

&НаСервере
Процедура ИзменениеГотовностиБлюдНаСервере(СсылкаНаЗаказ, Индекс)
	
	ТаблицаЗаказ = РеквизитФормыВЗначение("ТаблицаЗаказ" + Индекс, Тип("ТаблицаЗначений"));
	ГотовностьБлюд = ТаблицаЗаказ.ВыгрузитьКолонку("БлюдоГотово");
	
	ОбъектЗаказ = СсылкаНаЗаказ.ПолучитьОбъект();
		
	ОбъектЗаказ.Блюда.ЗагрузитьКолонку(ГотовностьБлюд, "БлюдоГотово");
	ОбъектЗаказ.Записать(РежимЗаписиДокумента.Проведение);
		
КонецПроцедуры 

&НаКлиенте
Процедура ВсеЗаказыПоставщику(Команда)
	ВсеЗаказыПоставщикуНаСервере();
КонецПроцедуры

&НаСервере
Процедура ВсеЗаказыПоставщикуНаСервере()
	
	Прокси = WSСсылки.ЗакрытьЗаказ.СоздатьWSПрокси("http://localhost/shawarman2","Заказы","ЗаказыSoap");  
	Прокси.Пользователь = "Иванов";
	
	Ответ = Прокси.ЗакрытьЗаказ("000000024");    
	
	ЧтениеXML = Новый ЧтениеXML;
	ЧтениеXML.УстановитьСтроку(Ответ);
	ОбъектXDTO = ФабрикаXDTO.ПрочитатьXML(ЧтениеXML);
	ЧтениеXML.Закрыть();

КонецПроцедуры

#КонецОбласти
 





